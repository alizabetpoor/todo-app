{"version":3,"sources":["components/Select/Select.js","components/Todo/TodoForm.js","components/Todo/TodoList.js","components/Navbar/Navbar.js","components/Todo/TodoApp.js","App.js","index.js"],"names":["SelectComp","props","options","value","label","status","onChange","e","setStatus","TodoForm","useState","todo","setTodo","className","onSubmit","preventDefault","todos","title","edit","completed","type","target","Select","TodoList","editRef","useRef","useEffect","current","focus","filteredTodos","map","index","onClick","newlist","splice","removeHandler","forEach","item","indexin","editHandler","selected","changeValue","ref","seledted","completeHandler","Navbar","Todos","useContext","contextTodo","filter","length","createContext","TodoApp","setFilteredTodos","FilterTodos","Provider","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7143c4c2.chunk.js","sourcesContent":["import Select from \"react-select\";\r\n\r\nconst SelectComp = (props) => {\r\n  const changeSelect = (e) => {\r\n    props.setStatus(e);\r\n  };\r\n  const options = [\r\n    { value: \"all\", label: \"all\" },\r\n    { value: \"completed\", label: \"completed\" },\r\n    { value: \"uncompleted\", label: \"uncompleted\" },\r\n  ];\r\n  return (\r\n    <div>\r\n      <Select options={options} value={props.status} onChange={changeSelect} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectComp;\r\n","import { useState } from \"react\";\r\nimport \"./TodoForm.css\";\r\nimport SelectComp from \"../Select/Select\";\r\n\r\nconst TodoForm = (props) => {\r\n  const [todo, setTodo] = useState(\"\");\r\n  const changeHandler = (e) => {\r\n    setTodo(e.target.value);\r\n  };\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    if (todo !== \"\") {\r\n      props.setTodo([\r\n        ...props.todos,\r\n        { title: todo, edit: false, completed: false },\r\n      ]);\r\n      setTodo(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form onSubmit={submitForm} className=\"form\">\r\n        <input type=\"text\" onChange={changeHandler} value={todo} />\r\n        <button type=\"submit\">add</button>\r\n      </form>\r\n      <SelectComp status={props.status} setStatus={props.setStatus} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import { useEffect, useRef } from \"react\";\r\nimport \"./TodoList.css\";\r\nconst TodoList = (props) => {\r\n  const editRef = useRef();\r\n  useEffect(() => {\r\n    if (editRef.current) {\r\n      editRef.current.focus();\r\n    }\r\n  }, [props.todos]);\r\n  const removeHandler = (e, index) => {\r\n    const newlist = [...props.todos];\r\n    newlist.splice(index, 1);\r\n    props.setTodo(newlist);\r\n  };\r\n  const editHandler = (index) => {\r\n    const newlist = [...props.todos];\r\n    newlist.forEach((item, indexin) => {\r\n      if (index !== indexin) {\r\n        item.edit = false;\r\n      }\r\n    });\r\n    newlist[index].edit = !props.todos[index].edit;\r\n    props.setTodo(newlist);\r\n  };\r\n  const changeValue = (e, index) => {\r\n    const newlist = [...props.todos];\r\n    const selected = { ...props.todos[index] };\r\n    selected.title = e.target.value;\r\n    newlist[index] = selected;\r\n    props.setTodo(newlist);\r\n  };\r\n  const completeHandler = (index) => {\r\n    const newlist = [...props.todos];\r\n    const seledted = { ...props.todos[index] };\r\n    seledted.completed = !seledted.completed;\r\n    newlist[index] = seledted;\r\n    props.setTodo(newlist);\r\n  };\r\n  return (\r\n    <div className=\"todolist\">\r\n      <h2>Todo List</h2>\r\n      {props.filteredTodos.map((todo, index) => {\r\n        return (\r\n          <div\r\n            className={todo.completed ? \"todo completed\" : \"todo\"}\r\n            key={index}\r\n          >\r\n            {!todo.completed ? (\r\n              <div>\r\n                <span\r\n                  onClick={(e) => removeHandler(e, index)}\r\n                  className=\"remove-icon icon\"\r\n                >\r\n                  remove\r\n                </span>\r\n\r\n                <span\r\n                  onClick={() => editHandler(index)}\r\n                  className=\"edit-icon icon\"\r\n                >\r\n                  {todo.edit ? \"save\" : \"edit\"}\r\n                </span>\r\n              </div>\r\n            ) : null}\r\n\r\n            {todo.edit ? (\r\n              <input\r\n                onChange={(e) => changeValue(e, index)}\r\n                type=\"text\"\r\n                value={todo.title}\r\n                ref={editRef}\r\n              />\r\n            ) : (\r\n              <p onClick={() => completeHandler(index)}>{todo.title}</p>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import \"./navbar.css\";\r\nimport { contextTodo } from \"./../Todo/TodoApp\";\r\nimport { useContext } from \"react\";\r\nconst Navbar = () => {\r\n  const Todos = useContext(contextTodo);\r\n  const countUnFinishedTodo = () => {\r\n    const count = Todos.filter((item) => item.completed === false);\r\n    return count.length;\r\n  };\r\n  return (\r\n    <header className=\"Navbar\">\r\n      <h4>تعداد todo های انجام نشده:{countUnFinishedTodo()}</h4>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createContext, useEffect, useState } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport TodoList from \"./TodoList\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport \"./TodoApp.css\";\r\n\r\nexport const contextTodo = createContext();\r\n\r\nconst TodoApp = () => {\r\n  const [status, setStatus] = useState({ value: \"all\", label: \"all\" });\r\n  const [todo, setTodo] = useState([\r\n    { title: \"avali\", edit: false, completed: false },\r\n    { title: \"dovomi\", edit: false, completed: false },\r\n    { title: \"sevemi\", edit: false, completed: false },\r\n  ]);\r\n  useEffect(() => {\r\n    const FilterTodos = (status) => {\r\n      switch (status) {\r\n        case \"completed\":\r\n          setFilteredTodos(todo.filter((item) => item.completed));\r\n          break;\r\n        case \"uncompleted\":\r\n          setFilteredTodos(todo.filter((item) => !item.completed));\r\n          break;\r\n        default:\r\n          setFilteredTodos(todo);\r\n      }\r\n    };\r\n    setFilteredTodos(todo);\r\n    FilterTodos(status.value);\r\n  }, [todo, status]);\r\n  const [filteredTodos, setFilteredTodos] = useState([]);\r\n\r\n  return (\r\n    <contextTodo.Provider value={todo}>\r\n      <div className=\"container\">\r\n        <Navbar />\r\n        <TodoForm\r\n          setTodo={setTodo}\r\n          todos={todo}\r\n          status={status}\r\n          setStatus={setStatus}\r\n        />\r\n        <TodoList\r\n          todos={todo}\r\n          setTodo={setTodo}\r\n          filteredTodos={filteredTodos}\r\n        />\r\n      </div>\r\n    </contextTodo.Provider>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n","import \"./App.css\";\nimport TodoApp from \"./components/Todo/TodoApp\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}